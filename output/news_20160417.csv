뉴스ID,뉴스GUID,일자(UTC timestamp),뉴스제목,본문,SENTIMENT,주요코인,카테고리,작성자,추천수,비추천수,출처,뉴스URL,이미지URL
42426794,sd6iOBkuiC3F0LYOyJwj5h,1460903448,The Call for Blockchain Standards is Premature and Alarmist,"William Mougayar is a Toronto-based entrepreneur, investor and advisor to Consensus 2016, CoinDesk's flagship conference. He is also the author of the upcoming book, The Business Blockchain.  Here, Mougayar argues that pushes for standards in the blockchain industry are premature, and that time should be given for the industry to reach consensus on key ideas.  Let's start by stating the obvious – Warnings about the need for blockchain standards are premature and alarmist.  It's too early to claim that a lack of standards is hurting blockchain technology adoption, or to call for standards bodies like the International Standards Organization (ISO) to get involved and define what they should be. (Though, there are already groups doing this).  The topic of blockchain standards is complicated, and it extends beyond just seeing it as an interoperability challenge. This is because blockchain standards can be divided into three interrelated vectors, comprised of technical, business and legal considerations.  If you perceive the blockchain as a technology, then you will implement it as a technology. If you see it as a business change enabler, then you will think about business processes. If you discern the legal implications, you will be emboldened by its new governance characteristics.  An enterprise blockchain (or distributed ledger) implementation will equally touch the technical, business and process-related areas and legal and regulatory sides. Therefore, standards should be looked at in a similar way, along these three complementary dimensions.  There is an old adage: The good thing about standards is there are so many of them to choose from. In the blockchain world, it’s still early days, so let us not drown yet in an alphabet soup of them.  Historical approach  Standards typically arrive in two ways.  De-facto standards can emerge by virtue of market adoption, or industry standards can be developed and agreed upon by a standards committee, or a consortium group. Standards carry with them a number of benefits, including some network effects, easier interoperability, shared implementation knowledge, lower costs and less overall risk.  However, before embarking on new standards, we should first see if we can implement existing ones, especially from a business process and regulatory point of view.  In the financial services industry, for example, current standards exist as part of mandatory regulations: the Banking Secrecy Act (BSA), the Dodd-Frank Act and the Commodities Exchange Act (CEA).  Specific to trading and transactions, we have the International Swaps and Derivatives Association (ISDA), the International Bank Account Number (IBAN), Commodity Futures Trading Commission (CFTC) rulings and European Market Infrastructure Regulation (EMIR) for the standardization of OTC contracts; just to name a few.  Secondly, we should consider updating standards that already exist, such as the ISDA Regulation 1.31 for recordkeeping rules, or proposing a modified-ISDA to better integrate with end-to-end transactions that are run on a decentralized clearing network.  After exhausting the first two alternatives, we can start to create or agree on new standards that are peculiar to blockchain and distributed ledger implementations.  Warning signs  Going one step further, there is a many-to-many relationship between technical, business and legal standards.  A given technical standard could be implemented several different ways and taken into different directions. And a business process or regulatory ruling standard could also be complied with via five different technologies.  But here is a warning about standards. Standards must be open, not proprietary, and allow anyone to participate. You do not generally compete on standards. They tend to level the playing field, and allow companies to compete on their own terms, once they have implemented these standards.  A slight competitive edge could be gained from the speed of your implementation, and certainly more benefits would ensue if you innovate beyond these standards. The blockchain presents similar opportunities and caveats as any other standards: They will be necessary, but not sufficient.  Technology innovation will always outpace regulatory and standards bodies who want to freeze-frame it in order to put their stamp on it. But if you try to frame a moving picture too early, the resulting optic will be distorted and you will want to replace it soon after.  Blockchain standards will be discussed during an upcoming workshop at Consensus 2016 involving Barclays chief blockchain strategist Simon Taylor and Ethereum chief scientist Vitalik Buterin.  Rules image via Shutterstock",NEUTRAL,없음,BLOCKCHAIN | BUSINESS | REGULATION | TECHNOLOGY | TRADING,William Mougayar,0,0,CoinDesk,https://coindesk.com/markets/2016/04/17/the-call-for-blockchain-standards-is-premature-and-alarmist,https://cdn.sanity.io/images/s3y3vcno/production/a935461849da2a165a933c8704f00670b243cff1-1500x1125.jpg?w=300&h=300&fit=crop
42426798,sd6iOBkuiC3F0LYOyJwjDh,1460899830,How to Get Blockchain Tech on Data Regulators' Radars,"Steve Ehrlich is an associate and the lead analyst for emerging technologies at Spitzberg Partners, a boutique consulting firm headquartered in New York that advises innovative technology companies.  In this opinion piece, Ehrlich discusses blockchain technology from the perspective of regulators tasked with ensuring consumer data protection and privacy.  I do not envy data protection authorities (DPAs).  Although virtually everyone from the top leadership to the rank and file of these organizations is knowledgeable and driven by a sense of purpose, the pace of innovation makes it seem as if their feet are perpetually stuck in digital quicksand or on an escalator going the wrong direction.  What specifically is keeping them so busy these days?  It begins with keeping tabs on US technology titans such as Google, Facebook, Amazon, Uber and AirBnB. But another major challenge comes from tracking emerging trends in the use of tech and data. While watchdogs struggle to chase the latest developments in search, social media and cloud computing, new technologies are constantly coming across their desks.  Part of a regulator's remit is to stay abreast of these innovations and understand their implications for data protection. Over the past few years, more resources have been diverted to study and respond to drones, connected devices, the use of technology in law enforcement, genetic testing, biometrics, etc.  It would be an understatement to call the load a full plate, and it is understandable why each of these technologies is receiving attention. Many already play a role in our lives, such as the Nest thermostat or Apple Touch ID.  Beyond a growing prominence in the marketplace, these innovations also have one common factor that makes them a concern for regulators – They generate oceans of user data, destined to be warehoused in a ""cloud"" and mined for lucrative insights. Armed with new Big Data analytic techniques, these technologies give companies the means to increase their informational dominance over customers.  By contrast, blockchain does not fit easily into this mold and is still a ways off from affecting the average consumer.  As a less developed technology, regulators tend to give it lower priority, or no attention at all.  Top of mind  So how do you get blockchain on their agendas?  Start by highlighting blockchain's future potential. To get regulators out of their comfort zone, it is important to underscore that blockchain technologies offer a categorical upgrade over existing solutions and tools in the marketplace today.  Therefore, it is important to embrace the opportunity blockchain presents to fundamentally turn the tables on the personal data economy. Or put another way – restore an individual’s ownership of their data.  Regulators around the world are constantly working on initiatives to ensure data controllers and companies have the legitimate rights to collect data; user consent for processing it; and measures in place to ensure that individuals are able to take back their data and give it to a competitor (a rival bank, for instance) if they so choose.  Blockchain-based identity solutions can flip the script, relying on cryptography, multi-signature technology and distributed computing power to restore an individual’s ""digital independence.""  Next, it's best to tie the technology to today’s landscape.  This requires a multi-prong approach: First linking the concept to core data protection principles and then a comparing blockchain technology to analogous marketplace solutions, such as cloud computing.  Data protection principles  Regulations today are primarily based on eight principles laid out by the OECD in 1980: collection limitation, data quality, purpose specification, use limitation, security safeguards, openness, individual participation and accountability.  Blockchain-based technologies offer measurable advantages over existing technologies in the market on these criteria. For example, the use of new encryption-based authentication protocols will make identity theft significantly more difficult.  Additionally, future products built on blockchain can also provide a transparent means of ensuring companies are scrupulous with the manner in which they use and treat customer data.  Today, it is expected that every company has in place a plain language ""privacy policy"" that details what personal data they will collect, how it will be used, how long it will be held, the ways in which people can obtain this data and other aspects of the data lifecycle.  After consenting to the policy, customers are typically left to simply trust that the vendor will keep to its promise. However, through the use of blockchain and smart contracts these protocols can be encoded into business processes, which can be standardized through the use of certification schemes, programmatically ensuring that companies will live up to their word.  Blockchain technology can also offer new solutions for maintaining company records, a task that will only grow in significance as businesses learn to capture more of their customers' data. Companies around the world are increasingly being required to maintain a full accounting of their data processing and storage activities for auditing and compliance purposes.  In most cases, part of fulfilling these requirements entails tracking employee access to company data. This is a use-case tailor-made for a blockchain-based solution for managing, verifying and safeguarding company data.  Comparison to cloud computing  To illustrate the strengths blockchain holds in these core data principles, it is important to draw a contrast between blockchain and existing products on the market.  When speaking with regulators regarding blockchain technology, I often spend time highlighting the difference between permissioned blockchains and open blockchains and ledgers. As the conversation gets a bit more involved, analogies are drawn between these types of blockchains and public, private and hybrid cloud solutions.  Governments are struggling to deal with the implications of cloud technologies from a regulatory point of view. Key concerns from their point of view include properly safeguarding data and ensuring that it is not misappropriated and remains confidential.  Additionally, the stakes are rising.  Given the growing popularity of cloud-based solutions, providers are starting to face increased scrutiny and penalties from regulators, even if they are merely a client or sub-contractor to the firm who uses their data-storage capabilities.  Taking into account an appreciation for the specific use cases for a blockchain vs non-blockchain based solutions, it is easy to make the case that distributed ledger solutions and smart contracts offer advantages from the perspectives of transparency, security and purpose limitation.  Setting expectations  Given that primary use cases are still centered on bitcoin and the financial industry, many DPAs will let financial regulators manage blockchain’s regulatory landscape.  Therefore, it is unlikely that there will be any major developments, regulation or guidance from data protection authorities related to blockchain in the immediate future.  However, regulators across the globe, such as the Federal Trade Commission (FTC), Article 29 Working Party in Europe and the Office of the Privacy Commissioner in Canada, issue comments or guidance with insight into how they see new technologies fitting into existing regulations and some of their primary concerns from a consumer protection point of view.  As blockchain technology continues to develop, I expect them to eventually start putting out discussion pieces as a prelude to formal guidance.  When DPAs issue calls for information, it would also be well-worth industry members' time to participate and submit comments.  At the same time, there are things that can be done right away. Developers and programmers in the space should learn about the OECD principles and relevant regulations as they build new products.  Additionally, regulators encourage certification schemes as a means of showing goodwill and alleviating their burden. For example, the upcoming European General Data Protection Regulation, which will replace the EU law enacted in 1995, encourages the use of certification regimes as a means of complying with regulations.  Creating such a program would be a great start for blockchain's regulatory engagement in the data protection world.  Radar image via Shutterstock",NEUTRAL,없음,BLOCKCHAIN | BTC | BUSINESS | REGULATION | TECHNOLOGY,Steve Ehrlich,0,0,CoinDesk,https://coindesk.com/markets/2016/04/17/how-to-get-blockchain-tech-on-data-regulators-radars,https://cdn.sanity.io/images/s3y3vcno/production/10ff043487db44171db005b9374299fc853a2cf8-1500x949.jpg?w=300&h=300&fit=crop
42426803,sd6iOBkuiC3F0LYOyJwjPh,1460894444,Why Many Smart Contract Use Cases Are Simply Impossible,"Dr Gideon Greenspan is the founder and CEO of Coin Sciences, the company behind the MultiChain platform for private blockchains.  In this opinion piece, Greenspan discusses blockchain-enabled smart contracts and why this application of the technology may be suffering from inflated expectations.  As the developer of a popular blockchain platform, I sometimes gets asked whether Ethereum-like smart contracts are on the MultiChain roadmap. The answer I always give is always: 'No, or at least not yet'.  But in the hype-filled world of blockchains, smart contracts are all the rage, so why ever not? Well, the problem is, while we now know of three strong use cases for permissioned bitcoin-style blockchains (provenance, company recordkeeping and lightweight finance), we've yet to find the equivalent for Ethereum smart contracts.  It's not that people don't understand what they want smart contracts to do. Rather, it's that so many of these ideas are simply impossible. When smart people hear the term ""smart contracts"", their imaginations tend to run wild. They conjure up dreams of autonomous intelligent software, going off into the world, taking data along for the ride. Unfortunately, the reality of smart contracts is more mundane.  A smart contract is a piece of code that is stored on an blockchain, triggered by blockchain transactions and which reads and writes data in that blockchain's database. That's it. Really.  A smart contract is just a fancy name for code that runs on a blockchain, and interacts with that blockchain's state. And what is the code? It's Pascal, it's Python, it's PHP. It's Java, it's Fortran, it's C++. If we're talking databases, it's stored procedures written in an extension of SQL.  All of these languages are fundamentally equivalent, solving the same sorts of problems in the same sorts of ways. Of course, each has its strengths and weaknesses – you’d be crazy to build a website in C or compress HD video in Ruby. But in principle at least, you could if you wanted to. You'd just pay a heavy price in terms of convenience, performance, and quite probably, your hair.  The problem with smart contracts isn’t just that people’s expectations are overblown, it's that these expectations are leading many to spend time and money on ideas that cannot possibly be implemented.  It seems large companies have sufficient resources to travel a lengthy path – from the moment when senior management encounters a new technology, to when that technology's advantages and limitations are truly understood. Perhaps our own experience can help shorten this time.  Over the past nine months, we've been pitched many smart contract use cases, and have found ourselves responding, time and again, that they simply cannot be done.  As a result, we've identified the three smart contract misconceptions that are most commonly held. These ideas aren't wrong because the technology is immature, or the tools are not yet available.  Rather, they misunderstand the fundamental properties of code which lives in a database and runs in a decentralized way.  1. Contacting external services  Often, the first use case proposed is a smart contract that changes its behavior in response to some external event. For example, an agricultural insurance policy which pays out conditionally based on the quantity of rainfall in a given month.  The imagined process goes something like this: The smart contract waits until the predetermined time, retrieves the weather report from an external service and behaves appropriately based on the data received.  This all sounds simple enough, but it’s also impossible. Why? Because a blockchain is a consensus-based system, meaning that it only works if every node reaches an identical state after processing every transaction and block.  Everything that takes place on a blockchain must be completely deterministic, with no possible way for differences to creep in. The moment that two honest nodes disagree about the chain's state, the entire system becomes worthless.  Now, recall that smart contracts are executed independently by every node on a chain. Therefore, if a smart contract retrieves some information from an external source, this retrieval is performed repeatedly and separately by each node. But because this source is outside of the blockchain, there is no guarantee that every node will receive the same answer.  Perhaps the source will change its response in the time between requests from different nodes, or perhaps it will become temporarily unavailable. Either way, consensus is broken and the entire blockchain dies.  So, what’s the workaround? Actually, it’s rather simple. Instead of a smart contract initiating the retrieval of external data, one or more trusted parties (""oracles"") creates a transaction which embeds that data in the chain. Every node will have an identical copy of this data, so it can be safely used in a smart contract computation.  In other words, an oracle pushes the data onto the blockchain rather than a smart contract pulling it in.  When it comes to smart contracts causing events in the outside world, a similar problem appears. For example, many like the idea of a smart contract which calls a bank’s API in order to transfer money. But if every node is independently executing the code in the chain, who is responsible for calling this API?  If the answer is just one node, what happens if that particular node malfunctions, deliberately or not? And if the answer is every node, can we trust every node with that API's password? And do we really want the API called hundreds of times? Even worse, if the smart contract needs to know whether the API call was successful, we're right back to the problem of depending on external data.  As before, a simple workaround is available. Instead of the smart contract calling an external API, we use a trusted service which monitors the blockchain’s state and performs certain actions in response. For example, a bank could proactively watch a blockchain and perform money transfers which mirror the on-chain transactions. This presents no risk to the blockchain’s consensus because the chain plays an entirely passive role.  Looking at these two workarounds, we can make some observations.  First, they both require a trusted entity to manage the interactions between the blockchain and the outside world. While this is technically possible, it undermines the goal of a decentralized system.  Second, the mechanisms used in these workarounds are straightforward examples of reading and writing a database. An oracle which provides external information is simply writing that information into the chain. And a service which mirrors the blockchain’s state in the real world is doing nothing more than reading from that chain. In other words, any interaction between a blockchain and the outside world is restricted to regular database operations.  We’ll talk more about this fact later on.  2. Enforcing on-chain payments  Here’s another proposal that we tend to hear a lot: using a smart contract to automate the payment of coupons for a so-called ""smart bond"". The idea is for the smart contract code to automatically initiate the payments at the appropriate times, avoiding manual processes and guaranteeing that the issuer cannot default.  Of course, in order for this to work, the funds used to make the payments must live inside the blockchain as well, otherwise a smart contract could not possibly guarantee their payment.  Recall that a blockchain is just a database, in this case a financial ledger containing the issued bond and some cash. So, when we talk about coupon payments, what we’re actually talking about are database operations which take place automatically at an agreed time.  While this automation is technically feasible, it suffers from a financial difficulty. If the funds used for coupon payments are controlled by the bond's smart contract, then those payments can indeed be guaranteed. But this also means those funds cannot be used by the bond issuer for anything else. And if those funds aren’t under the control of the smart contract, then there is no way in which payment can be guaranteed.  In other words, a smart bond is either pointless for the issuer, or pointless for the investor. And if you think about it, this is a completely obvious outcome.  From an investor’s perspective, the whole point of a bond is its attractive rate of return, at the cost of some risk of default. And for the issuer, a bond's purpose is to raise funds for a productive but somewhat risky activity, such as building a new factory.  There is no way for the bond issuer to make use of the funds raised, while simultaneously guaranteeing that the investor will be repaid. It should not come as a surprise that the connection between risk and return is not a problem that blockchains can solve.  3. Hiding confidential data  As I’ve written about previously, the biggest challenge in deploying blockchains is the radical transparency which they provide.  For example, if 10 banks set up a blockchain together, and two conduct a bilateral transaction, this will be immediately visible to the other eight. While there are various strategies for mitigating this problem, none beat the simplicity and efficiency of a centralized database in which a trusted administrator has full control over who can see what.  Some people think that smart contracts can solve this problem. They start with the fact that each smart contract contains its own miniature database, over which it has full control. All read and write operations on this database are mediated by the contract’s code, making it impossible for one contract to read another’s data directly. (This tight coupling between data and code is called encapsulation, and is the foundation of the popular object-oriented programming paradigm).  So, if one smart contract can’t access another’s data, have we solved the problem of blockchain confidentiality? Does it make sense to talk of hiding information in a smart contract? Unfortunately, the answer is no.  Because even if one smart contract can’t read another’s data, that data is still stored on every single node in the chain. For each blockchain participant, it’s in the memory or disk of a system which that participant completely controls. And there’s nothing to stop them reading the information from their own system, if and when they choose to do so.  Hiding data in a smart contract is about as secure as hiding it in the HTML code of a web page. Sure, regular web users won't see it, because it's not displayed in their browser window. But all it takes is for a web browser to add a ‘View Source’ function (as they all have), and the information becomes universally visible.  Similarly, for data hidden in smart contracts, all it takes is for someone to modify their blockchain software to display the contract’s full state, and all semblance of secrecy is lost.  A half-decent programmer could do that in an hour or so.  What smart contracts are for  With so many things that smart contracts cannot do, one might ask what they’re actually for. But in order to answer this question, we need to go back to the fundamentals of blockchains themselves. To recap, a blockchain enables a database to be directly and safely shared by entities who do not trust each other, without requiring a central administrator.  Blockchains enable data disintermediation, and this can lead to significant savings in complexity and cost.  Any database is modified via ""transactions"", which contain a set of changes to that database which must succeed or fail as a whole. For example, in a financial ledger, a payment from Alice to Bob is represented by a transaction that (a) checks if Alice has sufficient funds, (b) deducts a quantity from Alice’s account and (c) adds the same quantity to Bob’s.  In a regular centralized database, these transactions are created by a single trusted authority. By contrast, in a blockchain-driven shared database, transactions can be created by any of that blockchain’s users. And since these users do not fully trust each other, the database has to contain rules which restrict the transactions performed.  For example, in a peer-to-peer financial ledger, each transaction must preserve the total quantity of funds, otherwise participants could freely give themselves as much money as they liked.  One can imagine various ways of expressing these rules, but for now there are two dominant paradigms, inspired by bitcoin and Ethereum, respectively. The bitcoin method, which we might call ""transaction constraints"", evaluates each transaction in terms of: (a) the database entries deleted by that transaction and (b) the entries created.  In a financial ledger, the rule states that the total quantity of funds in the deleted entries has to match the total in those created. (We consider the modification of an existing entry to be equivalent to deleting that entry and creating a new one in its place).  The second paradigm, which comes from Ethereum, is smart contracts. This states that all modifications to a contract’s data must be performed by its code. (In the context of traditional databases, we can think of this as an enforced stored procedure.) To modify a contract’s data, blockchain users send requests to its code, which determines whether and how to fulfill those requests.  As in this example, the smart contract for a financial ledger performs the same three tasks as the administrator of a centralized database: checking for sufficient funds, deducting from one account and adding to another.  Both of these paradigms are effective, and each has its advantages and disadvantages. To summarize, bitcoin-style transaction constraints provide superior concurrency and performance, while Ethereum-style smart contracts offer greater flexibility.  So to return to the question of what smart contracts are for: Smart contracts are for blockchain use cases which can’t be implemented with transaction constraints.  Given this criterion for using smart contracts, I’m yet to see a strong use case for permissioned blockchains which qualifies.  All the compelling blockchain applications I know can be implemented with bitcoin-style transactions, which can handle permissioning and general data storage, as well as asset creation, transfer, escrow, exchange and destruction. Nonetheless, new use cases are still appearing, and I wouldn’t be surprised if some do require the power of smart contracts. Or, at the very least, an extension of the bitcoin paradigm.  Whatever the answer turns out to be, the key to remember is that smart contracts are simply one method for restricting the transactions performed in a database.  This is undoubtedly a useful thing, and is essential to making that database safe for sharing. But smart contracts cannot do anything else, and they certainly cannot escape the boundaries of the database in which they reside.  Pencil and eraser image via Shutterstock",NEGATIVE,없음,BLOCKCHAIN | BTC | ETH | TECHNOLOGY | WALLET,Gideon Greenspan,0,0,CoinDesk,https://coindesk.com/markets/2016/04/17/why-many-smart-contract-use-cases-are-simply-impossible,https://cdn.sanity.io/images/s3y3vcno/production/5814a17baf4fb8296943ef6da5a92c23c0854e7d-1500x1000.jpg?w=300&h=300&fit=crop
