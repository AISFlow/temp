뉴스ID,뉴스GUID,일자(UTC timestamp),뉴스제목,본문,SENTIMENT,주요코인,카테고리,작성자,추천수,비추천수,출처,뉴스URL,이미지URL
42399949,DbF8Q09kuKX2XWBxAbzCMJ,1496482849,Andresen is Back With a One-Man Security Project Inspired by Bitcoin Mishaps,"Gavin Andresen, the former lead developer of bitcoin, is breaking his silence.  While in recent months he's been more active on Twitter discussing the block size debate (even stamping his name on a new bitcoin scaling 'agreement'), Andresen has largely been absent from the bitcoin developer community for about a year.  But, that doesn't mean the prodigious worker, who did much to help build out bitcoin's early developer team and market, hasn't been busy.  At the beginning of May, Andresen tweeted:    I'm looking for beta testers and collaborators for my Random Sanity Project: https://t.co/NEbpr1baqk        — Gavin Andresen (@gavinandresen) May 1, 2017      The project looks to better secure the internet by checking sources of randomness used by individuals and organizations.  Keeping an eye on bitcoin  The Random Sanity Project not only stemmed from Andresen's interest in learning the programming language GO, but also in seeing the problems a lack of entropy can have in monetary software systems like bitcoin.  ""I certainly still do keep up with bitcoin,"" Andresen told CoinDesk, adding that he might contribute code review to DCG's new bitcoin scaling proposal, but that he's unlikely to write any of the code.  ""Bitcoin is such an interesting project because it’s security critical,"" he said. ""If the security fails, it's immediately obvious, people lose money and react immediately.""  This is different, he continued, than an email account being taken over or attacked, in that people typically don't notice those breaches for some time.  ""For a lot of security issues, bitcoin brings them into the light,"" Andresen said.  This quick reaction was seen in several mishaps based on faulty random number generation in the bitcoin ecosystem.  In May 2015, a vulnerability in Blockchain's Android bitcoin wallet left several users out money. According to Softpedia, the vulnerability allowed duplicate bitcoin addresses to be created and given to different users. At its core, the problem was with Blockchain's random number generator, random.org, which provided insufficient entropy on certain versions of the Android operating system.  And two years before, in August 2013, all bitcoin wallet applications on Android operating systems were potentially at risk when several vulnerabilities were found within another random number generator, Java SecureRandom.  Maintaining a distance  While the project is definitely tangential to Andresen’s former work as bitcoin's lead maintainer, it’s also much different.  ""So far, it's a one-person project, which I like,"" Andresen told CoinDesk. ""It’s nice and simple. I chose something small and intentionally boring.""  He continued:  ""Bitcoin was a big, complicated project involving lots of people spread out all over the world; there was too much stress and politics and I didn't want that again.”  Andresen has been working on the Random Sanity Project for about six months. According to him, the project is not intended to be a profit-making business. Instead, ideally, the project would be sponsored by an entity like the Linux Foundation to offer the service to anyone for free.  So how does Random Sanity work? Every system and every programming language has a way of getting random bytes – for instance, Linux has a special folder called '/dev/urandom' and OpenSSL provides several random number generators (which Bitcoin Core uses).  Users of the Random Sanity Project can take those random numbers – from 16 to 64 bytes – and input them into the service, which will return a 'true' if the bytes look random, or a 'false' if the numbers don't.  ""The problem of detecting whether your random numbers are good enough is a tricky problem,"" Andresen told CoinDesk. ""There are a bunch of ways you can screw up.""  Digital health check  While random number generators are created specifically to provide entropy (a lack of order, and hence predictability), there are several reasons something might go wrong.  Software downloads and upgrades can mess with randomness. Or it can be as simple as someone tripping over the virtual machine utilizing a random number generator cord and unplugging it.  But a typical failure, Andresen said, is when an organization is using cloud computing and starts up multiple virtual machines at the same time.  In this case, the organization might save an image of the software and run multiple copies for the web servers that handle traffic. Because the virtual machines are starting in the same state, they could, according to Andresen, come up with the same 'random' numbers.  ""There are usually tools for increasing entropy so this doesn't happen,"" he said, ""but [the Random Sanity Project] could be a good check.""  While he doesn't think a company needs to run every string of bytes a machine gives them through the tool, it would be beneficial to send one string of bytes when the machine starts up to make sure it's generating reasonable randomness. Then, he said, if it fails, the problem can be investigated.  ""This is designed as a way to make sure catastrophic disasters don't happen, or you catch them quick enough,"" said Andresen.  Further, the more people and organizations that use the system, the more valuable it becomes, because it can then base randomness on many more strings of bytes.  Currently, though, only a few have beta tested the service, sometimes contributing code back to the project – including people from startups Blockchain and ShapeShift, according to Andresen.  The trustless trend  On Twitter, some praised the service, while others were worried about the system's architecture.  For one, the initial system used HTTP, which allowed anyone to eavesdrop and see the random bytes being sent to the system. Andresen quickly relaunched using HTTPS to provide a secure connection so that no one can see what bytes are sent.  If an entity’s random number generator is broken, seeing one supposedly random string of bytes could open that entity up to attack, said another complaint from a Twitter user. A chance worth taking, Andresen responded.  As far as Andresen having insight into the bytes being sent to the service, he said he has none.  And, following the trend set by bitcoin, he said:  ""I'm trying to arrange things where people don’t have to trust me.""  While the service is currently running on the App Engine of the Google Cloud Platform, his next project is opening the project up to allow auditing by third parties. Presently, people can only audit the open-source code on GitHub, which Andresen assured CoinDesk, is exactly what’s running on the App Engine. The extra step, though, will prove it  Random numbers image via Shutterstock",NEUTRAL,없음,BLOCKCHAIN | BTC | BUSINESS | MARKET | TECHNOLOGY,Bailey Reutzel,0,0,CoinDesk,https://coindesk.com/markets/2017/06/03/andresen-is-back-with-a-one-man-security-project-inspired-by-bitcoin-mishaps,https://cdn.sanity.io/images/s3y3vcno/production/0d7b59f6132029f85eac54996fa08a70f089ca15-2560x1920.jpg?w=300&h=300&fit=crop
42399944,DbF8Q09kuKX2XWBxAbzCIN,1496480416,Why the Blockchain Needs More Failures to Succeed,"William Mougayar is the author of ""The Business Blockchain"" and a board advisor to, and investor in, various blockchain projects and startups (see disclosures).  Tired of scams? In this opinion piece, Mougayar argues that more failures are what's needed to take blockchain technology to the next level      In the world of startups, learning from failures is an inescapable reality, and part of the prevalent conventional wisdom. That is how the ecosystem and entrepreneurs move forward to greater heights, and with more successes.  But in the burgeoning blockchain segment, we haven’t seen that many failures yet. At least, not of the scale and variety required to extract long-lasting lessons for the entire industry. And certainly, not enough to warrant a call for an imminent crash or correction.  Failures are important because their sum results in a new body of knowledge that is rich with useful insights and best practices.  An aftermath of real failures can make the whole blockchain ecosystem more resilient, because it will result in revealing the boundaries and realities of what’s possible, useful, absurd, impossible, repeatable and scalable; out of everything that appears plausible and innovative at the beginning.  There are a few lessons from recent blockchain failures, but not enough:  Ethereum's bitcoin Reserves  Lessons: It is a good practice to hedge against cryptocurrency fluctuations, after raising your tokens.  Background: In 2014, the price of bitcoin took a downturn from $600 to $250 right after ethereum raised its ICO, in essence reducing the Ethereum Foundation’s budget and holdings that were largely kept in bitcoin. Hedging in cryptocurrency was still not widely practiced in 2014.  The Mt Gox and Bitfinex Thefts  Lessons: Security in cryptocurrency exchanges is extremely important. Although they are improving at it, cryptocurrency exchanges do not have bank-grade security, let alone consumer insurance against deposits.  Therefore, users with lots at stake are still at some risk, and need to take the security of their coin storage in their own hands, or at least diversify where they hold their cryptocurrency.  DAO Heist  Lessons: Mixing law and finance in smart contracts is not easy, and can result in grave consequences if the code weaknesses can be exploited. A weakness in the code is not just like a bug that can be forgotten after it is fixed. Plus, you can’t fully automate what you haven’t had a depth of experience in.  Future flops?  These were just a handful of early failures. What they have in common is the resulting definitive best practices and real lessons for going forward. But we need more failures – of the spectacular kind.  The ones to expect might fall in the following categories:  Attempts to apply the blockchain or tokens where they don’t fit  Entrepreneurs that default on their promise to bring a product to the market  Hypotheses with exaggerated claims where the blockchain is the hammer and everything is a nail  ICOs that raise money, but don't deliver, a year or two after launch  Lack of transparency resulting in delayed surprises that reveal the emperor had no clothes  More scams, thefts and plain stupid moves.  There are other areas where we need to see more clarity. These aren’t failures, but they are developing subjects that could benefit from some standardization of best practices.  Governance or token-based? What is the right model for open, transparent, public practices around decentralized cryptocurrency governance?  Ratios of token ownerships: Is 20% the maximum that a foundation/protocol or ICO app should keep? What if they control 80% of the tokens?  Valuations: The rush to ICOs is causing valuations to leap forward, ahead of value – whether they are protocols, software solutions or applications. To what extent will market tolerance persist without serious repercussions?  Waiting for second acts  Many blockchain project categories are in the first renditions of such attempts to apply blockchain technology. Typically, second iterations have higher success rates and reach higher grounds.  Amazon and YouTube were not the first attempts at e-commerce or video broadcasting. Previously launched similar service offerings failed and gave precedence to the eventual success of the two aforementioned giants.  Ethereum was conceived after seeing some limitations in bitcoin and colored coins.  Steemit was Dan Larimer’s second act, after lessons learned from BitShares.  Let’s not forget that the web’s early years were filled with spectacular failures. Webvan, Pets.com, eToys, Flooz, DrKoop.com and Kozmo are some of these failures. They each carried lessons in avoidance, and their second act derivatives were much more successful.  In sum, it would be OK to push the limits further in order to witness a greater intensity of failures. It would be acceptable to overshoot beyond what’s possible, so we can regroup and see the real playing field.  If we agree that an eventual crash is inescapable, that crash typically happens only after many mistakes are made.  It is my opinion that we will need to see more, bigger and more damaging failures in order to complete the circle of madness and early recklessness that accompanies early market formations, including the need to see more startups shutting down. Only then, can we start to predict that an imminent crash possibility is around the corner.  I would really like to see more of these failures and excesses, in part to rush the crash, but also to amass the lessons we need to learn, in order to continue growing further ahead.  If we do that, we would complete the circle of madness and early recklessness that accompanies early markets formation, and once again prove the validity of Carlota Perez perennial model.  This article originally appeared on the author's blog, StartupManagement.org, and has been republished here with his permission. Minor edits have been made.  Businessman image via Shutterstock",NEUTRAL,없음,BLOCKCHAIN | BTC | ETH | MARKET | TECHNOLOGY,William Mougayar,0,0,CoinDesk,https://coindesk.com/markets/2017/06/03/why-the-blockchain-needs-more-failures-to-succeed,https://cdn.sanity.io/images/s3y3vcno/production/7056cf65b363c85711fc0c4c1268eca199907c8f-1500x857.png?w=300&h=300&fit=crop
