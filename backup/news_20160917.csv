뉴스ID,뉴스GUID,일자(UTC timestamp),뉴스제목,본문,SENTIMENT,주요코인,카테고리,작성자,추천수,비추천수,출처,뉴스URL,이미지URL
42378822,0r6Zag11PPDEMKgUX7m7O7,1474149652,Bitfinex Issues Bitcoin Hack Repayment Plan Update,"Bitfinex has taken new steps to reimburse accountholders who lost funds in an exchange breach earlier this year.  In a blog post this week, the troubled exchange announced two special purpose vehicles (SPVs) would be made available to accountholders for the purpose of exchanging digital assets for interest in iFinex Inc, Bitfinex's parent company. The exchange issued the assets, called BFX tokens, to accountholders after suffering a 120,000 BTC ($72m) hack on 2nd August.  One SPV, the exchange said, was created in partnership with crowdfunding platform BnkToTheFuture, while another was part of an effort organized by investor Alistair Milne. Both SPVs will allow accountholders to exchange BFX tokens for $1 beneficial interests in iFinex, it said.  The news is the latest that follows Bitfinex's decision to spread the loss it experienced in the hack across accountholders, giving them the novel financial instruments when it reopened trading on 10th August. The exchange issued the cryptographic tokens via the Omni blockchain, with the understanding that users could either redeem them for $1 apiece or exchange them for equity in iFinex.  Since then, the tokens have been trading in the secondary market under the ticker BFX, though Bitfinex remains the only exchange to list the asset.  While market responses to the issuance of these tokens were mixed, Bitfinex has provided accountholders with positive signs since distributing them, announcing on 1st September that it was redeeming more than 1% of the tokens for $1 despite the fact that they were trading for less on the market.  For more on the exchange and its history, read our latest profile here.  Cash register image via Shutterstock",POSITIVE,BTC,BLOCKCHAIN | BTC | EXCHANGE | MARKET | TRADING,Charles Lloyd Bovaird II,0,0,CoinDesk,https://coindesk.com/markets/2016/09/17/bitfinex-issues-bitcoin-hack-repayment-plan-update,https://cdn.sanity.io/images/s3y3vcno/production/4cfb37982c69c1814bf198fe469131c014bd162d-1500x1000.jpg?w=300&h=300&fit=crop
42378837,0r6Zag11PPDEMKgUX7m7fj,1474128506,How Ethereum's Wallets Are Evolving,"Benedict Chan is platform lead at blockchain security firm BitGo and an advocate of bitcoin and ethereum blockchain technologies. He has designed and developed APIs and SDKs used behind a number of bitcoin multi-signature wallet implementations.  Here, Chan looks at the differences between ethereum multisig wallets and their bitcoin counterparts, as well as delving into their inner workings.  Wallets are one of most basic applications on any blockchain platform. They provide the interface for users to interact with the blockchain. Some wallets, such as the one offered by Bitcoin Core, connect to the blockchain directly via a full node, while others depend on web services to provide access.  At the basic level, a wallet seeks to serve users by receiving, sending, monitoring and listing transactions within a cryptocurrency. More advanced wallets enable users to gain better security or perform an extended set of actions on the blockchain, thus increasing their worth. This is particularly true in the case of the ethereum blockchain, where users need not only store value, but also perform various activities via contracts.  Background on multisig  Since their introduction in 2013, bitcoin multi-signature (multisig) wallets have been used to provide user redundancy and security when handling funds on the blockchain. Multi-signature accounts require that multiple keys must be signed to move a token, like a physical vault where more than one key is required for contents to be accessed.  Multisig makes it more difficult for attackers to steal from a wallet, since the keys can be put on separate machines. With this additional security, users can have peace of mind when storing and using coins, or set up wallet structures where multiple users and approvals are required for transfers.  Evolution from bitcoin to ethereum  The potential of ethereum’s blockchain, coupled with the rapid rise of the ether price in 2016, have driven user demand for a multi-signature web wallet. But unlike other bitcoin clones such as litecoin, ethereum happens to be a very unique blockchain because it was built from the ground up on an entirely different set of consensus rules. This brings about significant differences in how ethereum multisig wallets are implemented compared to their bitcoin counterparts.  Accounts and addressing  In bitcoin, a wallet must monitor multiple previous incoming transactions sent to addresses it has the keys to (these are known as 'unspents'). The aggregate total of unspent values over these addresses represent the balance in the wallet. In ethereum, there is no concept of unspents – instead, each account has a balance, which is changed with every transaction.  To create and sign a transaction, it is not necessary to collect and maintain previous unspent outputs – one need only remember the last used sequence ID (for purposes of preventing double spends) and increment it. Furthermore, since balances (and not unspents) are tracked, this reduces the burden on wallets to manage change. In this regard, creating transactions is simpler in ethereum. This does come at a cost of user privacy, because accounts are now tied to a single address, whereas users could send and receive on multiple addresses in bitcoin at once, making funds less traceable.  Mining fees  In bitcoin, the fees that users pay to miners are calculated based on the size of the transaction. In ethereum, they are calculated based on the amount of blockchain operations used, multiplied by the price the user is willing to pay per gas unit (the internal pricing for running a transaction or contract on ethereum). Simply put, the fee is related to the amount and complexity of the operations and the amount of space taken on the blockchain.  To technically advanced users, this is a more specific and fair manner to price the use of the blockchain and associated costs of validation. However, it could cause some confusion for novice users. For example, sending ether to a crowd-funded contract may cost a different fee (borne by the sender) than sending the same amount of ether to a friend. This poses an interesting challenge for application UI designers to communicate such differences and help users understand the reasoning behind it.  Multi-signature contract designs  Unlike bitcoin, ethereum supports advanced scripts, but does not yet support the concept of native multisig or P2SH (where one can pay to the hash of a contract and provide the script later).  The basic approach to securing funds with multiple signatures involves creating multiple 'single-sig' addresses and then writing a contract controlled by these addresses to store the funds. While this is more complex than with bitcoin, it could potentially provide wallet developers with more flexibility.  There are two main approaches to writing a contract wallet that requires multiple signatures to secure funds.  This is the most common approach used in wallets such as Mist or Etherli. First, the wallet contract is deployed, registering the 'signing addresses' provided. To send funds to an address, the first user, or proposer, sends a transaction containing a proposal request to the contract. This request has a unique operation ID (hash), derived from the amount, destination address and data to be sent.  Then, another user on the wallet contract must confirm that operation ID by sending a separate confirmation transaction to the contract. Both transactions must be published on the chain before the resulting operation (to send funds) can execute.  Although the previous approach is secure and suits many scenarios, there is demand to have all signatures in a single transaction, similar in practice to bitcoin. Known by some as the second evolution of multisig on ethereum, this has the advantages of requiring less space on chain and also being potentially faster, since it does not need to wait for multiple blocks.  Each transaction in ethereum can only have one sender/signer. Hence, implementing this in a contract requires the use of the 'ecrecover' assembly operation. This operation is able to verify the address of a signature in the data field of the transaction. The multi-signature contract is written with code to derive an operation ID from the amount, destination, data, etc, and verify that ID is signed by the signature in the data field. One signer can thus be considered as coming from the sender of the message, with other signer’s signatures validated in the data field, all within a single transaction.  Multisig wallet implementations  More technical readers may want to investigate these implementations of multi-signature contracts for ethereum:  DappSys 'easy multisig' implementation  Built on top of the Dappsys contract framework, this multisig implementation follows the first 'execute then confirm' design. It was recently shared during the dapp-a-day run-up to the Devcon conference. Its main benefit is the modular design of code for developers writing wallets on top of it, making it possible to easily apply to many further scenarios than value storage.  Future improvements  The ethereum community has a strong developer base, with several projects and teams expected to release applications in the near to medium term. These releases will drive demand and support for new features in ethereum multi-signature wallets:  Support for ERC20 tokens  While there are currently some multi-signature wallets available to secure ether, there are few for securing other tokens on top of ethereum, such as Digix DGD, Augur REP and so on. Such token contracts are an integral part of the ethereum ecosystem, and they all support the common ERC20 standard.  Building a wallet that supports this standard will mean that users can enjoy support for all these interesting tokens from a single wallet application.  Support for more operations/scenarios  Looking further into the horizon, the realm of operations that a wallet will need to be able to perform will also increase. Contracts on top of ethereum require a lot more than simple sending/receiving.  It is important for the industry to not only create interoperability standards around today’s wallet operations, but also establish common functions that wallets could support. These may include buying, selling, locking, staking, voting and more.  Multisig wallet evolution with EIP101 (Serenity)  The ethereum Serenity release will likely bring several useful features that will significantly improve the simplicity and user experience of multisig wallets.  The first improvement coming is 'pay-to-script-hash'-like functionality, which will make it possible to deploy and create the wallet contract only when the receiver wants to spend funds. This will save users the trouble of conducting a deployment to create wallets. More importantly, it also removes the requirement for new users to pay the gas fee upfront when setting up a multisig wallet.  This also makes it practical to disburse several HD addresses without spending the gas to deploy them first, similar to how many companies do this in bitcoin to collect payments. If done right, this could reduce address reuse and increase privacy.  Next, it will be possible for contracts to pay their own fees. Currently, the gas/mining fees when making a withdrawal are collected from the signing address that sends the transaction into the wallet contract. This means that users have to hold balances in two places: the wallet contract (secured by multisig), and the signing address (to pay for fees). Serenity will allow contracts to pay for their own gas, so users will not need to maintain a gas account to transact.  Final thoughts  Ultimately, users will not choose wallets based on the cryptocurrency they support, but by application features they offer – everyone is in search of the 'killer app', not the 'killer chain'. It is an exciting time to be in cryptocurrency, and to observe the evolution of wallets building the ecosystem to bring it closer to mainstream reach.  Leather image via Shutterstock",NEUTRAL,없음,BLOCKCHAIN | BTC | ETH | TECHNOLOGY | TRADING,Ben Chan,0,0,CoinDesk,https://coindesk.com/markets/2016/09/17/how-ethereums-wallets-are-evolving,https://cdn.sanity.io/images/s3y3vcno/production/4e8b62e9dd4950c410708c0085dbe7f77963ed46-1500x996.jpg?w=300&h=300&fit=crop
42378833,0r6Zag11PPDEMKgUX7m7bx,1474119922,The Upside of the Internet: Defending Bitcoin's 'Downside',"Like any good cryptocurrency adherent, in my romping around social media I was unsurprised to find yet-another-grossly-misrepresented-hit-piece on bitcoin. But this one sure was fancy. Op-ed in the NYTimes, you say? Group chief executive (?) for financial services from a major consulting firm? Wow. Must be a hard-hitting, well-researched, incisive look at the downsides of cryptocurrency. I clicked the link.  And then I read the goddamn title.  Downside of Bitcoin: A Ledger That Can't Be Corrected  Sigh. You’d think the author would have relented after writing The Downside of Transistors: Miniaturization or The Downside of the Internet: Worldwide Two-Way Connectivity, but I guess you can’t fault the symmetry. (Note: he didn’t actually write those, but is it really such a stretch?)  Because guess what the upsides of bitcoin are? The fact that it can’t be corrected; that it’s immutable. And that you don’t need anyone’s permission to use it.  For posterity’s sake – and because I haven’t written anything quite this biting in a while and I miss it – I’ve cherry-picked a few passages where I felt a deep need to Accensure.  The elephant in the room  Let’s start with the first paragraph:  ""We have heard waves of inspired commentary on how the technology, with its ability to share information and record transactions, will be as revolutionary as the internet itself. ... [W]e agree about these huge possibilities, but there is an elephant in the room that will need to be confronted.""  Nothing to really argue about here, but spoiler alert: the elephant is willful ignorance, doubly ironic given the relative intelligence of elephants in the animal kingdom.  ""One of the accepted virtues of blockchain is that it creates a permanent, immutable ledger of transactions. For example, each of the roughly 160 million Bitcoin transactions that have occurred since the cryptocurrency began in 2009 will stay on that ledger as long as Bitcoin exists.""  This is – remarkably – correct. Maybe we were wrong, dear reader! Let’s just keep reading and…  ""That permanence ... could severely limit blockchain’s usefulness in other areas of financial services relied on by billions of people. By clashing with new privacy laws like the “right to be forgotten” and by making it nearly impossible to resolve human error and mischief efficiently, the blockchain’s immutability could end up being its own worst enemy.""  Ah, there we are! There’s the piping-hot absurdity, fresh out of a convection oven powered by the hot air of blockchain hype.  A new way of thinking  Let’s consider what “clash[es] with new privacy laws like the right to be forgotten”.  I’m not sure how the hell a pseudonymous system of transferring value has anything to do with the “right to be forgotten”, especially when one considers privacy-enabling technologies like Zcash and MimbleWimble (amongst others) that would make it practically impossible to associate real-world identity with cryptocurrency movement.  But let’s assume, for a beautiful moment of dissociative cognition, that somehow, for reasons only top consultants can divine, having an immutable record of pseudonymous money transfers violates these laws.  Maybe these laws aren’t a good idea in the first place, since they can have a chilling effect on free speech and enable the whitewashing of history.  Instead should we endeavor to create a more privacy-protecting Internet from the ground up? Where citizens can confidently share information with cryptographic assurances that it only reaches the intended parties, or investing in homomorphic encryption to enable cloud services where providers have zero access to the information you provide to them for computation? Surely you can still make money off consulting those services, Accenture?  ""The financial services industry needs to face the question of how to balance the appeal of pristine accounting with the demands of the real world, where some things simply need to be struck from the records.""  The last company to value “simply striking things from the record” over “pristine accounting” was Enron.  What makes a blockchain special  The article makes an oblique critique of bitcoin's technology, assuming an old worldview. One where providers will know what their customers are putting into blockchains.  That’s – surprise surprise – silly and pointless. When you interact with bitcoin, you don’t sign up for an account while your personal credit history is checked and uploaded into a “central Bitcoin KYC repository.”  Remember that a key tenet of what makes a blockchain special is its permissionless usage. You know how you can accept money on bitcoin? You generate a private-public key pair. Could do the process completely offline if you’d like.  So repeat after me: I will not put sensitive, non-cryptographically-sealed information into a public blockchain. You don’t embed your social security number into a bitcoin OP_RETURN and then say, “Oops, please delete that.” You don’t embed sensitive customer data into a public blockchain like a private database, because it’s not a private database.  ""We need the means to solve this challenge, while maintaining blockchain’s vast strengths. At Accenture, we’re working with leading academics on a prototype that would enable blockchains to be amended or redacted where necessary — under responsible governance models potentially developed in cooperation with regulators.""  Whoops, I guess a blockchain is a private database – if you can amend or redact it, by writ of some authority. Let me rewrite this paragraph:  We need the means to solve this challenge, while neutering what makes a blockchain special. At Accenture, we’re working with leading academics on a database that can be amended or redacted where necessary — under responsible governance models potentially developed in cooperation with regulators. It’s a database, but spelled b-l-o-c-k-c-h-a-i-n.  And finally:  ""But if blockchain is to move beyond cryptocurrency and lab experiments to real and profitable deployments, we need to challenge conventional orthodoxy and rethink the role of absolute immutability.""  Who wants to move beyond cryptocurrency? The outstanding value of all bitcoin has reached close to ~$10bn as of this writing, with ether at a close ~$1bn. Public blockchains are already profitable deployments.  Fundamentally, I believe the author is dreadfully confused, or – perhaps more likely – was running an A-B test with his paid NYTimes Op-Ed advert and I was unlucky enough to catch the B-side. In the corrected version, I hope he reminds readers that “conventional orthodoxy” is relying on a mutable database and trusted parties for financial transactions. Challenging it is bitcoin.  This article was originally published on the author's Medium blog and has been reproduced here with permission. Some edits have been made for style and brevity.  Elephant in the room image via Shutterstock",NEGATIVE,없음,BLOCKCHAIN | BTC | TECHNOLOGY | WALLET | ZEC,Josh Cincinnati,0,0,CoinDesk,https://coindesk.com/markets/2016/09/17/the-upside-of-the-internet-defending-bitcoins-downside,https://cdn.sanity.io/images/s3y3vcno/production/eb4cfe8e8c51b881e8d413ca443075948254e0af-1600x1112.jpg?w=300&h=300&fit=crop
